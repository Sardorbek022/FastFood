# Generated by Django 5.2.1 on 2025-05-19 18:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DishModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Taomning aniq va qisqa nomi', max_length=100, verbose_name='Taom nomi')),
                ('description', models.TextField(blank=True, help_text='Taom haqida qo‘shimcha ma’lumot (ixtiyoriy)', verbose_name='Taom tavsifi')),
                ('price', models.DecimalField(decimal_places=2, help_text='Taomning narxi (so‘mda)', max_digits=10, verbose_name='Narxi')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Taom',
                'verbose_name_plural': 'Taomlar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('waiter', 'Ofitsiant'), ('customer', 'User')], default='customer', help_text='Foydalanuvchi tizimdagi rolini tanlang', max_length=20, verbose_name='Foydalanuvchi roli')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi',
                'verbose_name_plural': 'Foydalanuvchilar',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('new', 'Yangi'), ('accepted', 'Qabul qilingan'), ('sent', 'Yuborilgan')], default='new', help_text='Buyurtma holatini belgilang', max_length=20, verbose_name='Holati')),
                ('delivery_distance_km', models.FloatField(help_text='Buyurtmachi bilan restoran orasidagi masofa', verbose_name='Yetkazish masofasi (km)')),
                ('estimated_delivery_time', models.PositiveIntegerField(blank=True, help_text='Buyurtmaning tayyorlanishi va yetkazilishi uchun taxminiy vaqt', null=True, verbose_name='Taxminiy yetkazib berish vaqti (minut)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dishes', models.ManyToManyField(help_text='Buyurtmaga qo‘shilgan taomlar', to='fastfood.dishmodel', verbose_name='Taomlar')),
                ('user', models.ForeignKey(help_text='Buyurtmani bergan foydalanuvchi', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Buyurtmachi')),
            ],
            options={
                'verbose_name': 'Buyurtma',
                'verbose_name_plural': 'Buyurtmalar',
                'ordering': ['-created_at'],
            },
        ),
    ]
